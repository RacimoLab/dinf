name: wheel

on:
  push:
    tags:
      - '*'
  release:
    types: [published]

jobs:
  wheel_build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: build wheel
        run: |
          pip install build twine
          python -m build
          twine check dist/*

      - name: upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheel-and-sdist
          path: dist/

  wheel_test:
    runs-on: ${{ matrix.os }}
    needs: ['wheel_build']
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]
        exclude:
          - os: macos-latest
            python-version: "3.10"

    steps:
      - name: download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-and-sdist
          path: dist/

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install
        run: pip install dist/*.whl

      - name: test
        run: |
          python -c "import dinf"
          dinf --version
          dinf-plot --help

  pypi_upload:
    runs-on: ubuntu-18.04
    needs: ['wheel_test']
    steps:
      - name: download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel-and-sdist
          path: dist/

      - name: publish to test.pypi.org
        if: github.event_name == 'push' && github.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: publish to PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
